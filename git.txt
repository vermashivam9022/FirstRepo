git --version

//to configure git to github

git config --global user.name "vermashivam9022"            
git config --global user.email "vermashivam9022@gmail.com"
git config --list

in github folder= repository

// clonig from github to local

git clone /*github link*/
eg.  git clone https://github.com/vermashivam9022/FirstRepo.git

// to check any changes is done or not in our repo from previous commited repo in git
git status

eg. nothing to commit, working tree clean  or   modified:   alpha.txt

there are 4 typr of git status:
1. untracked - new file that git doesnt track yet
2.modified - some changes done
3.staged- file is ready to commited
4.unmodified - nothing change or unchanged

// ADD AND COMMIT

file - modified file - add(staged) - commit

ADD  - Adds new or chnaged file in your working directory to git staging area
command: git add <filename>

eg.=>  git add index.html

if we want to add in one time then
command git add <dot>
eg.=>  git add .


COMMIT - it recorded of chnages in git repo

command:  git commit -m "updated file"      // -m is use for show msg what changes u have done

//PUSH - push command is used for to push the commited file (present in git) to github
local to remote 

command:  git push [<remote>] [<branch>]

Parts of the Command
git push: The base command to initiate the push process.
<remote>: The name of the remote repository. Common examples: origin (default name for a remote repository)
<branch>: The branch you want to push. Common examples: main, master, or a feature branch like feature-xyz

eg. git push origin master or git push origin main

to check branch name
command:  git branch

// how to use git from local system in start

1. first make folder and go to in that folder and initilize git by using
   ls -a  no git available
	 command:  git init       // git initilize in folder
   ls -a  now .git is available
 2. now add files and then
   git add .                     // to add file in git
   
 3. git commit -m "intial file"  // to add final commited file in git
 
 4. git remote add origin [repo link]
     eg. git remote add origin https://github.com/vermashivam9022/FirstRepo.git
     
 5. git branch              // to check branch nam
 
 6. git branch -m "main"    // to chnage branch name
 
 7. git push [<remote>] [<branch>]
  eg.  git push origin main
       git push -u origin main   // -u  Sets the remote branch as the default upstream for the current branch.
       
       next time only write "git push"
       
   // work flow in git:
       
 github repo -> clone -> changes -> add -> commit  -> push 
 
 
 
 //branch command:
 
 git branch
 
 //To change a branch name in Git
 command: git branch -m <old-branch-name> <new-branch-name>
 eg.
 If the current branch is master and you want to rename it to main:
 git branch -M main
 
  git checkout BranchName        // to move to another nranch
 
 git checkout -b newBranchName    // to create new branch
 git checkout -d BranchName       // to delete the old branch
 
 //pull request- A pull request allows a contributor to notify others about changes theyâ€™ve pushed to a branch in a repository.

  How Pull Requests Work?
  Contributor Creates a Branch: Work on a new feature or bug fix in a dedicated branch:
  	git checkout -b feature-branch
  Make and Commit Changes: Add files, make changes, and commit:
  	git add .
	git commit -m "Add new feature"
 Push the Branch to Remote: Push the branch to the remote repository:
 	git push origin feature-branch
 Create the Pull Request:    or by command line:   git merge [another branch name at which we want to merge]
	Go to the repository on GitHub or similar platforms.
	Navigate to the Pull Requests tab.
	Click New Pull Request.
	Choose the base branch (e.g., main) and the compare branch (e.g., feature-branch).
	Add a title and description to explain the changes.
	Submit the pull request.
  Review and Discussion:
	Other collaborators review the pull request.
	Feedback is provided as comments on specific lines of code or the entire pull request.
	Merge the Pull Request: Once approved, the changes are merged into the base branch:
 Options for merging:
	Merge Commit: Creates a merge commit.
	Squash and Merge: Combines all commits into a single commit.
	Rebase and Merge: Applies the commits from the pull request onto the base branch without a merge commit.

// git pull in local repo
	The git pull command is used to fetch changes from a remote repository and integrate them into your current branch.
	 
	git checkout main
	command: git pull origin main  
	
// git merge conflict
we have to choose which line is take either from branch1 or branch2 or both
	git merge main
	
// undo changes

case1: staged changes: (after add and before commit)
	git reset <filename>   // for signle file
	     or
	git reset         
	
case2 : commited changes for 1 commit back
	git reset HEAD ~1
	
	TO show all commit 
	 git log
	 
	 git log --oneline
case 3: commited changes for multi commit back
	
	git reset <commit hash>
	
	git reset --hard <commit-hash>

//fork
fork is new repo  that shares code in our repo

